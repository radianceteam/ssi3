module.exports = {
	DEXClientContract: {
		abi: {
			"ABI version": 2,
			header: ["pubkey", "time", "expire"],
			functions: [
				{
					name: "constructor",
					inputs: [{name: "ownerAddr", type: "address"}],
					outputs: [],
				},
				{
					name: "connectPair",
					inputs: [{name: "pairAddr", type: "address"}],
					outputs: [{name: "statusConnection", type: "bool"}],
				},
				{
					name: "setPair",
					inputs: [
						{name: "arg0", type: "address"},
						{name: "arg1", type: "address"},
						{
							name: "arg2",
							type: "address",
						},
						{name: "arg3", type: "address"},
						{name: "arg4", type: "address"},
					],
					outputs: [],
				},
				{
					name: "getConnectorAddress",
					inputs: [
						{name: "_answer_id", type: "uint32"},
						{name: "connectorSoArg", type: "uint256"},
					],
					outputs: [{name: "value0", type: "address"}],
				},
				{
					name: "connectRoot",
					inputs: [
						{name: "root", type: "address"},
						{
							name: "souint",
							type: "uint256",
						},
						{name: "gramsToConnector", type: "uint128"},
						{name: "gramsToRoot", type: "uint128"},
					],
					outputs: [{name: "statusConnected", type: "bool"}],
				},
				{
					name: "connectCallback",
					inputs: [{name: "wallet", type: "address"}],
					outputs: [],
				},
				{
					name: "getAllDataPreparation",
					inputs: [],
					outputs: [
						{name: "pairKeysR", type: "address[]"},
						{name: "rootKeysR", type: "address[]"},
					],
				},
				{
					name: "processSwapA",
					inputs: [
						{name: "pairAddr", type: "address"},
						{
							name: "qtyA",
							type: "uint128",
						},
						{name: "minQtyB", type: "uint128"},
						{name: "maxQtyB", type: "uint128"},
					],
					outputs: [{name: "processSwapStatus", type: "bool"}],
				},
				{
					name: "processSwapB",
					inputs: [
						{name: "pairAddr", type: "address"},
						{
							name: "qtyB",
							type: "uint128",
						},
						{name: "minQtyA", type: "uint128"},
						{name: "maxQtyA", type: "uint128"},
					],
					outputs: [{name: "processSwapStatus", type: "bool"}],
				},
				{
					name: "processLiquidity",
					inputs: [
						{name: "pairAddr", type: "address"},
						{
							name: "qtyA",
							type: "uint128",
						},
						{name: "qtyB", type: "uint128"},
					],
					outputs: [{name: "processLiquidityStatus", type: "bool"}],
				},
				{
					name: "returnLiquidity",
					inputs: [
						{name: "pairAddr", type: "address"},
						{name: "tokens", type: "uint128"},
					],
					outputs: [{name: "returnLiquidityStatus", type: "bool"}],
				},
				{
					name: "tokensReceivedCallback",
					inputs: [
						{name: "token_wallet", type: "address"},
						{
							name: "token_root",
							type: "address",
						},
						{name: "amount", type: "uint128"},
						{
							name: "sender_public_key",
							type: "uint256",
						},
						{name: "sender_address", type: "address"},
						{
							name: "sender_wallet",
							type: "address",
						},
						{name: "original_gas_to", type: "address"},
						{
							name: "updated_balance",
							type: "uint128",
						},
						{name: "payload", type: "cell"},
					],
					outputs: [],
				},
				{
					name: "createNewPair",
					inputs: [
						{name: "root0", type: "address"},
						{
							name: "root1",
							type: "address",
						},
						{name: "pairSoArg", type: "uint256"},
						{
							name: "connectorSoArg0",
							type: "uint256",
						},
						{name: "connectorSoArg1", type: "uint256"},
						{
							name: "rootSoArg",
							type: "uint256",
						},
						{name: "rootName", type: "bytes"},
						{
							name: "rootSymbol",
							type: "bytes",
						},
						{name: "rootDecimals", type: "uint8"},
						{
							name: "grammsForPair",
							type: "uint128",
						},
						{name: "grammsForRoot", type: "uint128"},
						{
							name: "grammsForConnector",
							type: "uint128",
						},
						{name: "grammsForWallet", type: "uint128"},
						{name: "grammsTotal", type: "uint128"},
					],
					outputs: [],
				},
				{
					name: "getPairData",
					inputs: [{name: "pairAddr", type: "address"}],
					outputs: [
						{name: "pairStatus", type: "bool"},
						{
							name: "pairRootA",
							type: "address",
						},
						{name: "pairWalletA", type: "address"},
						{
							name: "pairRootB",
							type: "address",
						},
						{name: "pairWalletB", type: "address"},
						{
							name: "pairRootAB",
							type: "address",
						},
						{name: "curPair", type: "address"},
					],
				},
				{
					name: "sendTokens",
					inputs: [
						{name: "tokenRoot", type: "address"},
						{
							name: "to",
							type: "address",
						},
						{name: "tokens", type: "uint128"},
						{name: "grams", type: "uint128"},
					],
					outputs: [{name: "sendTokenStatus", type: "bool"}],
				},
				{
					name: "sendTransaction",
					inputs: [
						{name: "dest", type: "address"},
						{name: "value", type: "uint128"},
						{
							name: "bounce",
							type: "bool",
						},
						{name: "flags", type: "uint8"},
						{name: "payload", type: "cell"},
					],
					outputs: [],
				},
				{
					name: "deployLockStakeSafeCallback",
					inputs: [
						{name: "lockStakeSafe", type: "address"},
						{
							name: "nftKey",
							type: "address",
						},
						{name: "amount", type: "uint128"},
						{name: "period", type: "uint256"},
					],
					outputs: [],
				},
				{
					name: "transferOwnershipCallback",
					inputs: [
						{name: "addrFrom", type: "address"},
						{name: "addrTo", type: "address"},
					],
					outputs: [],
				},
				{
					name: "processLiquidityCallback",
					inputs: [
						{name: "walletA", type: "address"},
						{
							name: "amountA",
							type: "uint128",
						},
						{name: "provideA", type: "uint128"},
						{
							name: "unusedReturnA",
							type: "uint128",
						},
						{name: "walletB", type: "address"},
						{name: "amountB", type: "uint128"},
						{
							name: "provideB",
							type: "uint128",
						},
						{name: "unusedReturnB", type: "uint128"},
						{
							name: "walletAB",
							type: "address",
						},
						{name: "mintAB", type: "uint128"},
					],
					outputs: [],
				},
				{
					name: "returnLiquidityCallback",
					inputs: [
						{name: "walletAB", type: "address"},
						{
							name: "burnAB",
							type: "uint128",
						},
						{name: "walletA", type: "address"},
						{name: "returnA", type: "uint128"},
						{
							name: "walletB",
							type: "address",
						},
						{name: "returnB", type: "uint128"},
					],
					outputs: [],
				},
				{
					name: "limitOrderCallback",
					inputs: [
						{name: "status", type: "uint8"},
						{
							name: "addrOrder",
							type: "address",
						},
						{name: "addrOwner", type: "address"},
						{
							name: "addrPair",
							type: "address",
						},
						{name: "directionPair", type: "uint8"},
						{name: "price", type: "uint128"},
						{
							name: "amount",
							type: "uint128",
						},
						{name: "walletOwnerFrom", type: "address"},
						{name: "walletOwnerTo", type: "address"},
					],
					outputs: [],
				},
				{
					name: "makeLimitOrderA",
					inputs: [
						{name: "routerWalletA", type: "address"},
						{
							name: "pairAddr",
							type: "address",
						},
						{name: "qtyA", type: "uint128"},
						{name: "priceA", type: "uint128"},
						{
							name: "souint",
							type: "uint256",
						},
					],
					outputs: [{name: "makeLimitOrderStatus", type: "bool"}],
				},
				{
					name: "makeLimitOrderB",
					inputs: [
						{name: "routerWalletB", type: "address"},
						{
							name: "pairAddr",
							type: "address",
						},
						{name: "qtyB", type: "uint128"},
						{name: "priceB", type: "uint128"},
						{
							name: "souint",
							type: "uint256",
						},
					],
					outputs: [{name: "makeLimitOrderStatus", type: "bool"}],
				},
				{
					name: "transferLimitOrder",
					inputs: [
						{name: "limitOrder", type: "address"},
						{
							name: "addrNewOwner",
							type: "address",
						},
						{name: "walletNewOwnerFrom", type: "address"},
						{name: "walletNewOwnerTo", type: "address"},
					],
					outputs: [{name: "transferLimitOrderStatus", type: "bool"}],
				},
				{
					name: "changeLimitOrderPrice",
					inputs: [
						{name: "limitOrder", type: "address"},
						{name: "newPrice", type: "uint128"},
					],
					outputs: [{name: "changePriceStatus", type: "bool"}],
				},
				{
					name: "cancelLimitOrder",
					inputs: [{name: "limitOrder", type: "address"}],
					outputs: [{name: "cancelOrderStatus", type: "bool"}],
				},
				{
					name: "takeLimitOrderA",
					inputs: [
						{name: "pairAddr", type: "address"},
						{
							name: "limitOrderA",
							type: "address",
						},
						{name: "routerWalletB", type: "address"},
						{name: "qtyB", type: "uint128"},
						{
							name: "priceB",
							type: "uint128",
						},
					],
					outputs: [{name: "takeLimitOrderStatus", type: "bool"}],
				},
				{
					name: "takeLimitOrderB",
					inputs: [
						{name: "pairAddr", type: "address"},
						{
							name: "limitOrderB",
							type: "address",
						},
						{name: "routerWalletA", type: "address"},
						{name: "qtyA", type: "uint128"},
						{
							name: "priceA",
							type: "uint128",
						},
					],
					outputs: [{name: "takeLimitOrderStatus", type: "bool"}],
				},
				{
					name: "getBalance",
					inputs: [{name: "_answer_id", type: "uint32"}],
					outputs: [{name: "value0", type: "uint128"}],
				},
				{
					name: "rootDEX",
					inputs: [],
					outputs: [{name: "rootDEX", type: "address"}],
				},
				{
					name: "soUINT",
					inputs: [],
					outputs: [{name: "soUINT", type: "uint256"}],
				},
				{
					name: "codeDEXConnector",
					inputs: [],
					outputs: [{name: "codeDEXConnector", type: "cell"}],
				},
				{
					name: "owner",
					inputs: [],
					outputs: [{name: "owner", type: "address"}],
				},
				{
					name: "rootKeys",
					inputs: [],
					outputs: [{name: "rootKeys", type: "address[]"}],
				},
				{
					name: "rootWallet",
					inputs: [],
					outputs: [{name: "rootWallet", type: "map(address,address)"}],
				},
				{
					name: "rootConnector",
					inputs: [],
					outputs: [{name: "rootConnector", type: "map(address,address)"}],
				},
				{
					name: "souintLast",
					inputs: [],
					outputs: [{name: "souintLast", type: "uint256"}],
				},
				{
					name: "pc",
					inputs: [],
					outputs: [
						{
							components: [
								{name: "pcType", type: "uint8"},
								{name: "pcFrom", type: "address"},
							],
							name: "pc",
							type: "tuple",
						},
					],
				},
				{
					name: "pairs",
					inputs: [],
					outputs: [
						{
							components: [
								{name: "status", type: "bool"},
								{
									name: "rootA",
									type: "address",
								},
								{name: "walletA", type: "address"},
								{name: "rootB", type: "address"},
								{
									name: "walletB",
									type: "address",
								},
								{name: "rootAB", type: "address"},
							],
							name: "pairs",
							type: "map(address,tuple)",
						},
					],
				},
				{
					name: "pairKeys",
					inputs: [],
					outputs: [{name: "pairKeys", type: "address[]"}],
				},
			],
			data: [
				{key: 1, name: "rootDEX", type: "address"},
				{
					key: 2,
					name: "soUINT",
					type: "uint256",
				},
				{key: 3, name: "codeDEXConnector", type: "cell"},
			],
			events: [],
		},
		tvc: "",
		code: "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",
	},
};
